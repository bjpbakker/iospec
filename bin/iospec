#!/usr/bin/env io

safeLoadIoSpec := method(
  initializationError := try (
    doRelativeFile("../src/iospec/iospec.io")
  )
  if (initializationError,
    write("IoSpec cannot load. Please check your installation.\n",
          "\n",
          "Details of the initialization failure are printed below.\n")
    initializationError showStack
    System exit(1)
  )
)

safeLoadIoSpec

App := Object clone do (
  newSlot("options")

  run := method(argv,
    loadOptions(argv)

    arguments := if(options arguments isEmpty, list("."), options arguments)
    files := loadFiles(arguments map(arg, iospec cli SpecFilesArgument with(arg)))
    if (files isEmpty,
      error("No specs to run")
    )
    files foreach(file, Lobby doFile(file))
    result := iospec core Runner clone setWorld(iospec world) setReport(iospec report) run
    result allPassed or error
  )

  loadOptions := method(argv,
    ex := try (
      self options := iospec cli Options with(argv)
      iospec useFormatter(options formatter)
    )
    if (ex, error(iospec support Pretty words(ex type) .. ": " .. ex error))
  )

  loadFiles := method(args,
    args map(arg, iospec cli FileCollector clone setDirectory(arg root) collect(arg fnpattern)) flatten
  )

  error := method(msg,
    msg and writeln(msg)
    System exit(1)
  )
)

App run(System args slice(1))
